//@version=5
strategy("布林带策略", overlay=true, initial_capital=10000, default_qty_value=10000, default_qty_type=strategy.cash, commission_type=strategy.commission.percent, commission_value=0.1, calc_on_every_tick=true)

// 参数设置
length = input.int(20, "布林带周期", minval=1)
mult = input.float(2.0, "布林带标准差倍数", minval=0.1, step=0.1)
bandwidthMult = input.float(1.5, "布林带宽度倍数(x)", minval=1.0, step=0.1)
profitTarget = input.float(0.5, "止盈百分比(y)", minval=0.1, step=0.1) / 100

// 计算布林带
basis = ta.sma(close, length)
dev = mult * ta.stdev(close, length)
upper = basis + dev
lower = basis - dev

// 计算布林带宽度
bandwidth = (upper - lower) / basis
avgBandwidth = ta.sma(bandwidth, 20)
isBandwidthExpanded = bandwidth >= avgBandwidth * bandwidthMult

// 绘制布林带
plot(basis, "中轨", color=color.blue)
plot(upper, "上轨", color=color.red)
plot(lower, "下轨", color=color.red)

// 价格与中轨的关系
priceAboveBasis = close > basis
priceBelowBasis = close < basis

// 开发调试 - 可视化当前状态
plotchar(priceBelowBasis, "价格低于中轨", "▼", location.top, color=color.red, size=size.tiny)

// 定义市场状态
var bool inLongPosition = false
var bool inShortPosition = false
var float entryPrice = 0.0
var bool waitAfterLongProfit = false
var bool waitAfterShortProfit = false

// 价格穿过中轨的条件
crossBelowBasis = close < basis and close[1] >= basis[1]
crossAboveBasis = close > basis and close[1] <= basis[1]

// 重置等待状态
if (waitAfterLongProfit and crossBelowBasis)
    waitAfterLongProfit := false

if (waitAfterShortProfit and crossAboveBasis)
    waitAfterShortProfit := false

// 止盈目标
longProfitTarget = entryPrice * (1 + profitTarget)
shortProfitTarget = entryPrice * (1 - profitTarget)

// --- 关键修改：使用更强制的平仓机制 ---

// 进行交易
if (strategy.position_size == 0)  // 没有持仓
    if (isBandwidthExpanded and not waitAfterLongProfit and not waitAfterShortProfit)
        // 开多条件
        if (priceAboveBasis)  // 使用当前计算的关系
            strategy.entry("做多", strategy.long)
            inLongPosition := true
            inShortPosition := false
            entryPrice := close
            
        // 开空条件
        if (priceBelowBasis)  // 使用当前计算的关系
            strategy.entry("做空", strategy.short)
            inShortPosition := true
            inLongPosition := false
            entryPrice := close
else
    // 平多条件 - 强制平仓条件
    if (strategy.position_size > 0)  // 持有多仓
        if (priceBelowBasis)  // 价格低于中轨
            strategy.close("做多", comment="止损")
            inLongPosition := false
        else if (close >= longProfitTarget)  // 达到止盈目标
            strategy.close("做多", comment="止盈")
            inLongPosition := false
            waitAfterLongProfit := true
    
    // 平空条件 - 强制平仓条件
    if (strategy.position_size < 0)  // 持有空仓
        if (priceAboveBasis)  // 价格高于中轨
            strategy.close("做空", comment="止损")
            inShortPosition := false
        else if (close <= shortProfitTarget)  // 达到止盈目标
            strategy.close("做空", comment="止盈")
            inShortPosition := false
            waitAfterShortProfit := true

// 添加背景颜色显示
bgcolor(isBandwidthExpanded ? color.new(color.yellow, 90) : na)
bgcolor(waitAfterLongProfit ? color.new(color.green, 90) : na)
bgcolor(waitAfterShortProfit ? color.new(color.red, 90) : na)